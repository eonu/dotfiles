#!/usr/bin/env ruby

require 'fileutils'

module Note
  DIRECTORY = '/Users/edwinonuonga/dropbox/university/year3/sem2'
  LATEX = '/Users/edwinonuonga/downloads/latex/mytex/mytex.tex'

  def self.start args
    args = %w[-h] if args.empty?
    return puts "  USAGE: make-note <course-abbr> <file-name> <description>" if args.first == '-h'

    course = args.first.upcase

    Dir.chdir DIRECTORY do
      # Prompt to create course folder (if it doesn't already exist)
      unless course? course
        create = prompt "Course notes folder '#{args.first}/notes' doesn't exist. Create anyway? (Y/N): "
        if %w[Y y Yes yes YES].include? create
          FileUtils.mkdir_p File.join(course, 'notes')
        else
          return
        end
      end

      file = File.join course, 'notes', (args[1].end_with?('.md') ? args[1] : "#{args[1]}.md")

      # Raise error if note file already exists
      raise Errno::EEXIST.new(File.join(DIRECTORY, file)) if File.file? file

      # Create note file
      File.open(file, 'w') do |f|
        f << <<~HEREDOC
          $$
          #{File.read LATEX}
          $$

          # #{course}

          *#{args.last}*

          ---



          ---
        HEREDOC
      end

      # Open note file in Typora
      exec "typora #{file}"
    end
  end

  private

  def self.course? directory
    Dir.chdir(DIRECTORY) { File.directory? File.join(directory, 'notes') }
  end

  def self.prompt message
    print message
    STDIN.gets.chomp
  end
end

Note.start ARGV
